//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapPractice.opendap.co_ops.nos.noaa.gov {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="highlowtidepredSoapBinding", Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class highlowtidepredService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getHighLowTidePredictionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHLPredAndMetadataOperationCompleted;
        
        /// <remarks/>
        public highlowtidepredService() {
            this.Url = "http://opendap.co-ops.nos.noaa.gov/axis/services/highlowtidepred";
        }
        
        public highlowtidepredService(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        public event getHighLowTidePredictionsCompletedEventHandler getHighLowTidePredictionsCompleted;
        
        /// <remarks/>
        public event getHLPredAndMetadataCompletedEventHandler getHLPredAndMetadataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("HighLowValues", Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
        public HighLowValues getHighLowTidePredictions([System.Xml.Serialization.XmlElementAttribute(Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")] Parameters Parameters) {
            object[] results = this.Invoke("getHighLowTidePredictions", new object[] {
                        Parameters});
            return ((HighLowValues)(results[0]));
        }
        
        /// <remarks/>
        public void getHighLowTidePredictionsAsync(Parameters Parameters) {
            this.getHighLowTidePredictionsAsync(Parameters, null);
        }
        
        /// <remarks/>
        public void getHighLowTidePredictionsAsync(Parameters Parameters, object userState) {
            if ((this.getHighLowTidePredictionsOperationCompleted == null)) {
                this.getHighLowTidePredictionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHighLowTidePredictionsOperationCompleted);
            }
            this.InvokeAsync("getHighLowTidePredictions", new object[] {
                        Parameters}, this.getHighLowTidePredictionsOperationCompleted, userState);
        }
        
        private void OngetHighLowTidePredictionsOperationCompleted(object arg) {
            if ((this.getHighLowTidePredictionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHighLowTidePredictionsCompleted(this, new getHighLowTidePredictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("HighLowAndMetadata", Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
        public HighLowAndMetadata getHLPredAndMetadata([System.Xml.Serialization.XmlElementAttribute(Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")] Parameters Parameters) {
            object[] results = this.Invoke("getHLPredAndMetadata", new object[] {
                        Parameters});
            return ((HighLowAndMetadata)(results[0]));
        }
        
        /// <remarks/>
        public void getHLPredAndMetadataAsync(Parameters Parameters) {
            this.getHLPredAndMetadataAsync(Parameters, null);
        }
        
        /// <remarks/>
        public void getHLPredAndMetadataAsync(Parameters Parameters, object userState) {
            if ((this.getHLPredAndMetadataOperationCompleted == null)) {
                this.getHLPredAndMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHLPredAndMetadataOperationCompleted);
            }
            this.InvokeAsync("getHLPredAndMetadata", new object[] {
                        Parameters}, this.getHLPredAndMetadataOperationCompleted, userState);
        }
        
        private void OngetHLPredAndMetadataOperationCompleted(object arg) {
            if ((this.getHLPredAndMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHLPredAndMetadataCompleted(this, new getHLPredAndMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class Parameters {
        
        /// <remarks/>
        public string stationId;
        
        /// <remarks/>
        public string beginDate;
        
        /// <remarks/>
        public string endDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string datum;
        
        /// <remarks/>
        public int unit;
        
        /// <remarks/>
        public int timeZone;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class highlowtidepred {
        
        /// <remarks/>
        public string time;
        
        /// <remarks/>
        public double pred;
        
        /// <remarks/>
        public string type;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class Data {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("data")]
        public highlowtidepred[] data;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string date;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class HighLowValues {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute("HighLowValues", IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public Data[] HighLowValues1;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://opendap.co-ops.nos.noaa.gov/axis/webservices/highlowtidepred/wsdl")]
    public partial class HighLowAndMetadata {
        
        /// <remarks/>
        public string stationId;
        
        /// <remarks/>
        public string stationName;
        
        /// <remarks/>
        public float latitude;
        
        /// <remarks/>
        public float longitude;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string dataSource;
        
        /// <remarks/>
        public string COOPSDisclaimer;
        
        /// <remarks/>
        public string beginDate;
        
        /// <remarks/>
        public string endDate;
        
        /// <remarks/>
        public string datum;
        
        /// <remarks/>
        public string unit;
        
        /// <remarks/>
        public string timeZone;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
        public Data[] HighLowValues;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getHighLowTidePredictionsCompletedEventHandler(object sender, getHighLowTidePredictionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHighLowTidePredictionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHighLowTidePredictionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HighLowValues Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HighLowValues)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getHLPredAndMetadataCompletedEventHandler(object sender, getHLPredAndMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHLPredAndMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHLPredAndMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HighLowAndMetadata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HighLowAndMetadata)(this.results[0]));
            }
        }
    }
}
